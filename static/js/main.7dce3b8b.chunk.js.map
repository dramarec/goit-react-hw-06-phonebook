{"version":3,"sources":["components/contacts/contactsItem/ContactsItem.module.css","components/Phonebook.module.css","components/form/Form.module.css","components/section/Section.module.css","components/findContact/Find.module.css","components/natification/Natification.js","redux/actions/contactsActions.js","components/form/Form.jsx","components/header/Header.js","components/section/Section.jsx","components/contacts/contactsItem/ContactsItem.jsx","components/contacts/ContactsList.jsx","components/findContact/FindContact.jsx","components/Phonebook.js","components/App.js","redux/reducers/contactsReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Div","styled","div","Empty","Used","addNewContact","createAction","contact","payload","id","uuidv4","deleteContact","setFilter","setAlert","getAllContacts","Form","state","name","number","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","showUsedAlert","showEmptyAlert","setTimeout","onSubmit","type","className","styles","input","placeholder","onChange","button","Component","mapDispatchToProps","connect","reducerContacts","Header","title","style","textAlign","Section","children","container","ContactsItem","onRemove","item","span","text","onClick","contacts","filter","toLowerCase","includes","onHandleDeleteContact","map","dispatch","CSSTransition","in","appear","classNames","timeout","unmountOnExit","length","App","contactsReducer","createReducer","action","some","rootReducer","combineReducers","store","configureStore","reducer","console","log","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,OAAS,+B,mBCAjID,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,YAAc,+BAA+B,KAAO,wBAAwB,WAAa,8BAA8B,OAAS,0BAA0B,aAAe,kC,mBCA5ND,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,uB,mBCAvDD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,aAAe,gC,mBCAzGD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,uB,2bCEvD,I,EAAMC,E,MAAMC,EAAOC,IAAV,KAgBIC,EAAQ,WACjB,OACI,cAACH,EAAD,UACI,8DAICI,EAAO,WAChB,OACI,cAACJ,EAAD,UACI,sD,qFC1BNK,EAAgBC,YAAa,0BAA0B,SAAAC,GAAO,MAAK,CACrEC,QAAQ,2BACDD,GADA,IAEHE,GAAIC,oBAGNC,EAAgBL,YAAa,0BAC7BM,EAAYN,YAAa,sBACzBO,EAAWP,YAAa,sBACxBQ,EAAiBR,YAAa,2BCH9BS,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAiBZC,kBAAoB,SAAAC,GAChB,EAAKC,SAAL,eACKD,EAAEE,OAAOL,KAAOG,EAAEE,OAAOC,S,EAIlCC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKC,MAAMC,aAAa,CACpBV,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,SAEvB,EAAKG,SAAS,CACVJ,KAAM,GACNC,OAAQ,M,mEApBM,IAAD,QACbU,KAAKF,MAAMG,eAAiBD,KAAKF,MAAMI,iBACvCC,YAAW,kBAAM,EAAKL,MAAMb,aAAY,Q,+BAuB5C,OACI,uBAAMmB,SAAUJ,KAAKJ,aAArB,UACI,yCAEI,uBACIS,KAAK,OACLhB,KAAK,OACLiB,UAAWC,IAAOC,MAClBC,YAAY,OACZd,MAAOK,KAAKZ,MAAMC,KAClBqB,SAAUV,KAAKT,uBAIvB,2CAEI,uBACIc,KAAK,OACLhB,KAAK,SACLiB,UAAWC,IAAOC,MAClBC,YAAY,SACZd,MAAOK,KAAKZ,MAAME,OAClBoB,SAAUV,KAAKT,uBAIvB,wBAAQe,UAAWC,IAAOI,OAAQN,KAAK,SAAvC,gC,GAjEGO,aA8EbC,EAAqB,CACvBd,aAActB,EACdQ,WACAC,kBAEW4B,eAVS,SAAA1B,GAAK,MAAK,CAC9Ba,cAAeb,EAAM2B,gBAAgBd,cACrCC,eAAgBd,EAAM2B,gBAAgBb,kBAQFW,EAAzBC,CAA6C3B,GC7E7C6B,EAZA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAKd,OACI,wBAAQC,MALG,CACXC,UAAW,UAIX,SACI,6BAAKF,O,iBCGFG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUJ,EAAY,EAAZA,MACzB,OACI,0BAASX,UAAWY,IAAMI,UAA1B,UACKL,GAAS,6BAAKA,IACdI,M,iBCWEE,EAfM,SAAC,GAAD,IAAG1C,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQkC,EAArB,EAAqBA,SAArB,OACjB,qBAAIlB,UAAWC,IAAOkB,KAAtB,UACI,sBAAMnB,UAAWC,IAAOmB,KAAxB,oBACA,mBAAGpB,UAAWC,IAAOoB,KAArB,SAA4BtC,IAC5B,mBAAGiB,UAAWC,IAAOoB,KAArB,SAA4BrC,IAE5B,wBACIT,GAAIA,EACJwB,KAAK,SACLC,UAAWC,IAAOI,OAClBiB,QAASJ,QCqBfX,EAAqB,CACvB9B,cAAeA,GAGJ+B,eAZS,SAAA1B,GAAK,MAAK,CAC9ByC,SAAUzC,EAAM2B,gBAAgBc,SAASC,QAAO,SAAAnD,GAAO,OACnDA,EAAQU,KACH0C,cACAC,SAAS5C,EAAM2B,gBAAgBe,OAAOC,qBAQXlB,EAAzBC,EAhCM,SAAC,GAAiC,IAA/Be,EAA8B,EAA9BA,SAAU9C,EAAoB,EAApBA,cACxBkD,EAAwB,SAAAzC,GAAM,IACxBX,EAAOW,EAAEE,OAATb,GACRE,EAAcF,IAElB,OACI,8BACKgD,EAASK,KAAI,gBAAG7C,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQT,EAAjB,EAAiBA,GAAjB,OACV,cAAC,EAAD,CAEIQ,KAAMA,EACNC,OAAQA,EACRT,GAAIA,EACJ2C,SAAUS,GAJLpD,W,iBCmBViC,eAZS,SAAA1B,GACpB,MAAO,CACH0C,OAAQ1C,EAAM2B,gBAAgBe,WAGX,SAAAK,GACvB,MAAO,CACHnD,UAAW,SAAAH,GACPsD,EAASnD,EAAUH,QAIhBiC,EA7BK,SAAC,GAA2B,IAAzBgB,EAAwB,EAAxBA,OAAQ9C,EAAgB,EAAhBA,UAK3B,OACI,mCACI,uBACIqB,KAAK,OACLC,UAAWC,IAAOC,MAClBC,YAAY,wBACZd,MAAOmC,EACPpB,SAXW,SAAAlB,GAAM,IACjBG,EAAUH,EAAEE,OAAZC,MACRX,EAAUW,WC6DHmB,eALS,SAAA1B,GAAK,MAAK,CAC9ByC,SAAUzC,EAAM2B,gBAAgBc,SAChC5B,cAAeb,EAAM2B,gBAAgBd,cACrCC,eAAgBd,EAAM2B,gBAAgBb,kBAE3BY,EAzDG,SAAC,GAAiD,IAA/Ce,EAA8C,EAA9CA,SAAU5B,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAC1C,OACI,qCACI,cAACkC,EAAA,EAAD,CACIC,IAAI,EACJC,QAAQ,EACRC,WAAYhC,IACZiC,QAAS,IACTC,eAAa,EALjB,SAOI,cAAC,EAAD,CAAQxB,MAAM,6BAGlB,cAAC,EAAD,CAASA,MAAM,YAAf,SACI,cAAC,EAAD,MAGHY,EAASa,OAAS,GACf,cAAC,EAAD,CAASzB,MAAM,kBAAf,SACI,cAAC,EAAD,MAIPY,EAASa,OAAS,GACf,cAAC,EAAD,CAASzB,MAAM,cAAf,SACI,cAAC,EAAD,MAIR,cAACmB,EAAA,EAAD,CACIC,GAAInC,EAEJsC,QAAS,IACTD,WAAYhC,IACZkC,eAAa,EALjB,SAOI,cAAC,EAAD,MAGJ,cAACL,EAAA,EAAD,CACIC,GAAIpC,EAEJuC,QAAS,IACTD,WAAYhC,IACZkC,eAAa,EALjB,SAOI,cAAC,EAAD,YChDDE,EARH,WACR,OACI,mCACI,cAAC,EAAD,O,uCC2DGC,EA3CSC,YAAc,eAZjB,CACjBhB,SAAU,GAMVC,OAAQ,GACR5B,gBAAgB,EAChBD,eAAe,KAGkB,mBAG5BxB,GAAgB,SAACW,EAAO0D,GACrB,OACI1D,EAAMyC,SAASkB,MACX,SAAApE,GAAO,OAAIA,EAAQU,OAASyD,EAAOlE,QAAQS,QAGxC,2BAAKD,GAAZ,IAAmBa,eAAgBb,EAAMa,gBACjC6C,EAAOlE,QAAQS,KAAKqD,OAG5B,2BACOtD,GADP,IAEIyC,SAAS,GAAD,mBAAMzC,EAAMyC,UAAZ,CAAsBiB,EAAOlE,YAJlC,2BAAKQ,GAAZ,IAAmBc,gBAAiBd,EAAMc,oBAXrB,cAmB5BnB,GAAgB,SAACK,EAAO0D,GAAR,mBAAC,eACX1D,GADU,IAEbyC,SAAS,YACFzC,EAAMyC,SAASC,QACd,SAAAnD,GAAO,OAAIA,EAAQE,KAAOiE,EAAOlE,iBAvBhB,cA2B5BI,GAAY,SAACI,EAAO0D,GAAR,mBAAC,eACP1D,GADM,IAET0C,OAAQgB,EAAOlE,aA7BU,cA+B5BK,GAAW,SAAAG,GAAK,kCACVA,GADU,IAEbc,gBAAgB,EAChBD,eAAe,OAlCU,cAoC5Bf,GAAiB,SAACE,EAAO0D,GAAR,mBAAC,eACZ1D,GADW,IAEdyC,SAAS,YAAKiB,EAAOlE,cAtCI,ICftBoE,EAJKC,YAAgB,CAChClC,gBAAiB6B,ICGNM,EAJDC,YAAe,CACzBC,QAASJ,ICEbK,QAAQC,IAAI,UAAWJ,GAEvBK,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJO,SAASC,eAAe,W","file":"static/js/main.7dce3b8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__3zWh0\",\"span\":\"ContactsItem_span__fhIsl\",\"text\":\"ContactsItem_text__1rYQP\",\"button\":\"ContactsItem_button__2mjtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Phonebook_enter__1yJDZ\",\"enterActive\":\"Phonebook_enterActive__eRwC5\",\"exit\":\"Phonebook_exit__2ZIKJ\",\"exitActive\":\"Phonebook_exitActive__2EvST\",\"appear\":\"Phonebook_appear__1kyc4\",\"appearActive\":\"Phonebook_appearActive__1WmfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__28m9x\",\"button\":\"Form_button__2GsM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3qas_\",\"appear\":\"Section_appear__2INuo\",\"appearActive\":\"Section_appearActive__26HQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Find_input__1LIRT\",\"button\":\"Find_button__3bLPg\"};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n    width: 300px;\n    height: 80px;\n    background-color: tomato;\n    position: absolute;\n    border-radius: 5px;\n    top: 0;\n    right: 0;\n    opacity: 0.8;\n    p {\n        font-size: 25px;\n        padding: 10px;\n        text-align: center;\n    }\n`;\n\nexport const Empty = () => {\n    return (\n        <Div>\n            <p>ALL FIELDS MUST BE FILLED!</p>\n        </Div>\n    );\n};\nexport const Used = () => {\n    return (\n        <Div>\n            <p>IS ALREADY IN USE!</p>\n        </Div>\n    );\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addNewContact = createAction('@contact/addNewContact', contact => ({\n    payload: {\n        ...contact,\n        id: uuidv4(),\n    },\n}));\nconst deleteContact = createAction('@contact/deleteContact');\nconst setFilter = createAction('@contact/setFilter');\nconst setAlert = createAction('@contact/setAlert,');\nconst getAllContacts = createAction('@contact/getAllContacts');\n\nexport { addNewContact, deleteContact, setFilter, setAlert, getAllContacts };\n","import React, { Component } from 'react';\nimport styles from './Form.module.css';\nimport { connect } from 'react-redux';\nimport {\n    addNewContact,\n    getAllContacts,\n    setAlert,\n} from '../../redux/actions/contactsActions';\n\nclass Form extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    // componentDidMount() {\n    //     if (localStorage.getItem('contacts')) {\n    //         this.props.getAllContacts(\n    //             JSON.parse(localStorage.getItem('contacts')),\n    //         );\n    //     }\n    // }\n\n    componentDidUpdate() {\n        if (this.props.showUsedAlert || this.props.showEmptyAlert) {\n            setTimeout(() => this.props.setAlert(), 2500);\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onAddContact({\n            name: this.state.name,\n            number: this.state.number,\n        });\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={styles.input}\n                        placeholder=\"Name\"\n                        value={this.state.name}\n                        onChange={this.handleInputChange}\n                    />\n                </label>\n\n                <label>\n                    Number\n                    <input\n                        type=\"text\"\n                        name=\"number\"\n                        className={styles.input}\n                        placeholder=\"Number\"\n                        value={this.state.number}\n                        onChange={this.handleInputChange}\n                    />\n                </label>\n\n                <button className={styles.button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    showUsedAlert: state.reducerContacts.showUsedAlert,\n    showEmptyAlert: state.reducerContacts.showEmptyAlert,\n});\n\nconst mapDispatchToProps = {\n    onAddContact: addNewContact,\n    setAlert,\n    getAllContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ title }) => {\n    const styles = {\n        textAlign: 'center',\n    };\n\n    return (\n        <header style={styles}>\n            <h1>{title}</h1>\n        </header>\n    );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport style from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children, title }) => {\n    return (\n        <section className={style.container}>\n            {title && <h2>{title}</h2>}\n            {children}\n        </section>\n    );\n};\n\nexport default Section;\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport styles from './ContactsItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, onRemove }) => (\n    <li className={styles.item}>\n        <span className={styles.span}>√</span>\n        <p className={styles.text}>{name}</p>\n        <p className={styles.text}>{number}</p>\n\n        <button\n            id={id}\n            type=\"button\"\n            className={styles.button}\n            onClick={onRemove}\n        ></button>\n    </li>\n);\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ContactsItem from './contactsItem/ContactsItem';\n// import styles from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/actions/contactsActions';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n    const onHandleDeleteContact = e => {\n        const { id } = e.target;\n        deleteContact(id);\n    };\n    return (\n        <div>\n            {contacts.map(({ name, number, id }) => (\n                <ContactsItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    id={id}\n                    onRemove={onHandleDeleteContact}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    contacts: state.reducerContacts.contacts.filter(contact =>\n        contact.name\n            .toLowerCase()\n            .includes(state.reducerContacts.filter.toLowerCase()),\n    ),\n});\n\nconst mapDispatchToProps = {\n    deleteContact: deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n    deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './Find.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setFilter } from '../../redux/actions/contactsActions';\n\nconst FindContact = ({ filter, setFilter }) => {\n    const onHandleChange = e => {\n        const { value } = e.target;\n        setFilter(value);\n    };\n    return (\n        <>\n            <input\n                type=\"text\"\n                className={styles.input}\n                placeholder=\"Find contacts by name\"\n                value={filter}\n                onChange={onHandleChange}\n            />\n        </>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        filter: state.reducerContacts.filter,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilter: id => {\n            dispatch(setFilter(id));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContact);\n\nFindContact.propTypes = {\n    filter: PropTypes.string.isRequired,\n    setFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Phonebook.module.css';\nimport { Empty, Used } from './natification/Natification';\n\nimport Form from './form/Form';\nimport Header from './header/Header';\nimport Section from './section/Section';\nimport ContactsList from './contacts/ContactsList';\nimport FindContact from './findContact/FindContact';\n\nimport { connect } from 'react-redux';\n\nconst Phonebook = ({ contacts, showUsedAlert, showEmptyAlert }) => {\n    return (\n        <>\n            <CSSTransition\n                in={true}\n                appear={true}\n                classNames={styles}\n                timeout={500}\n                unmountOnExit\n            >\n                <Header title=\"Home Work #2 Phonebook\" />\n            </CSSTransition>\n\n            <Section title=\"Phonebook\">\n                <Form />\n            </Section>\n\n            {contacts.length > 1 && (\n                <Section title=\"Finder contacts\">\n                    <FindContact />\n                </Section>\n            )}\n\n            {contacts.length > 0 && (\n                <Section title=\"My Contacts\">\n                    <ContactsList />\n                </Section>\n            )}\n\n            <CSSTransition\n                in={showEmptyAlert}\n                // appear={true}\n                timeout={250}\n                classNames={styles}\n                unmountOnExit\n            >\n                <Empty />\n            </CSSTransition>\n\n            <CSSTransition\n                in={showUsedAlert}\n                // appear={true}\n                timeout={250}\n                classNames={styles}\n                unmountOnExit\n            >\n                <Used />\n            </CSSTransition>\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    contacts: state.reducerContacts.contacts,\n    showUsedAlert: state.reducerContacts.showUsedAlert,\n    showEmptyAlert: state.reducerContacts.showEmptyAlert,\n});\nexport default connect(mapStateToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from './Phonebook';\n\nconst App = () => {\n    return (\n        <>\n            <Phonebook />\n        </>\n    );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    addNewContact,\n    deleteContact,\n    setFilter,\n    setAlert,\n    getAllContacts,\n} from '../actions/contactsActions';\n\nconst initialState = {\n    contacts: [\n        // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    showEmptyAlert: false,\n    showUsedAlert: false,\n};\n\nconst contactsReducer = createReducer(\n    { ...initialState },\n    {\n        [addNewContact]: (state, action) => {\n            if (\n                state.contacts.some(\n                    contact => contact.name === action.payload.name,\n                )\n            ) {\n                return { ...state, showUsedAlert: !state.showUsedAlert };\n            } else if (!action.payload.name.length) {\n                return { ...state, showEmptyAlert: !state.showEmptyAlert };\n            } else\n                return {\n                    ...state,\n                    contacts: [...state.contacts, action.payload],\n                };\n        },\n\n        [deleteContact]: (state, action) => ({\n            ...state,\n            contacts: [\n                ...state.contacts.filter(\n                    contact => contact.id !== action.payload,\n                ),\n            ],\n        }),\n        [setFilter]: (state, action) => ({\n            ...state,\n            filter: action.payload,\n        }),\n        [setAlert]: state => ({\n            ...state,\n            showEmptyAlert: false,\n            showUsedAlert: false,\n        }),\n        [getAllContacts]: (state, action) => ({\n            ...state,\n            contacts: [...action.payload],\n        }),\n    },\n);\n\nexport default contactsReducer;\n//----------------------------\n// import {\n//     ADDNEWCONTACT,\n//     DELETECONTACT,\n//     SETFILTER,\n//     SETALERT,\n//     GETALLCONTACTS,\n// } from '../constants/contactsConstants';\n\n// const initialState = {\n//     contacts: [\n//         { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//         { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//         { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//         { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//     showEmptyAlert: false,\n//     showUsedAlert: false,\n// };\n\n// const contactsReducer = (state = { ...initialState }, action) => {\n//     switch (action.type) {\n//         case ADDNEWCONTACT:\n//             // localStorage.setItem(\n//             //     'contacts',\n//             //     JSON.stringify([...state.contacts, action.payload]),\n//             // );\n//             if (\n//                 state.contacts.some(\n//                     contact => contact.name === action.payload.name,\n//                 )\n//             ) {\n//                 return { ...state, showUsedAlert: !state.showUsedAlert };\n//             } else if (!action.payload.name.length) {\n//                 return { ...state, showEmptyAlert: !state.showEmptyAlert };\n//             } else\n//                 return {\n//                     ...state,\n//                     contacts: [...state.contacts, action.payload],\n//                 };\n\n//         case DELETECONTACT:\n//             // localStorage.setItem(\n//             //     'contacts',\n//             //     JSON.stringify([...state.contacts, action.payload]),\n//             // );\n//             return {\n//                 ...state,\n//                 contacts: [\n//                     ...state.contacts.filter(\n//                         contact => contact.id !== action.payload,\n//                     ),\n//                 ],\n//             };\n\n//         case SETFILTER:\n//             return {\n//                 ...state,\n//                 filter: action.payload,\n//             };\n\n//         case SETALERT:\n//             return {\n//                 ...state,\n//                 showEmptyAlert: false,\n//                 showUsedAlert: false,\n//             };\n//         case GETALLCONTACTS:\n//             return {\n//                 ...state,\n//                 contacts: [...action.payload],\n//             };\n\n//         default:\n//             return state;\n//     }\n// };\n\n// export default contactsReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducer from './contactsReducer';\n\nconst rootReducer = combineReducers({\n    reducerContacts: contactsReducer,\n});\n\nexport default rootReducer;\n","import rootReducer from './reducers/rootReducer';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({\n    reducer: rootReducer,\n});\n\nexport default store;\n//----------------------\n// import { createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import rootReducer from './reducers/rootReducer';\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nconsole.log('store :', store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}